Prefix(:=<http://www.w3.org/ns/solid/terms#>)
Prefix(cc:=<https://creativecommons.org/ns#>)
Prefix(ldp:=<http://www.w3.org/ns/ldp#>)
Prefix(log:=<http://www.w3.org/2000/10/swap/log#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(dcterms:=<http://purl.org/dc/terms/>)


Ontology(<http://www.w3.org/ns/solid/terms>
Annotation(dcterms:issued "2015-11-16"^^xsd:date)
Annotation(dcterms:modified "2018-01-24"^^xsd:date)
Annotation(rdfs:label "Solid terms"@en)
Annotation(cc:attributionURL <http://www.w3.org/ns/solid/terms>)
Annotation(cc:license <https://creativecommons.org/publicdomain/zero/1.0/>)

Declaration(Class(rdfs:Resource))
Declaration(Class(log:Formula))
Declaration(Class(:Account))
Declaration(Class(:Inbox))
Declaration(Class(:ListedDocument))
Declaration(Class(:Notification))
Declaration(Class(:Patch))
Declaration(Class(:Timeline))
Declaration(Class(:TypeIndex))
Declaration(Class(:TypeRegistration))
Declaration(Class(:UnlistedDocument))
Declaration(ObjectProperty(:deletes))
Declaration(ObjectProperty(:inserts))
Declaration(ObjectProperty(:patches))
Declaration(ObjectProperty(:privateTypeIndex))
Declaration(ObjectProperty(:publicTypeIndex))
Declaration(ObjectProperty(:typeIndex))
Declaration(ObjectProperty(:where))
Declaration(DataProperty(:storageQuota))
Declaration(DataProperty(:storageUsage))
Declaration(AnnotationProperty(<http://openid.net/specs/connect/1.0/issuer>))
Declaration(AnnotationProperty(dcterms:issued))
Declaration(AnnotationProperty(dcterms:modified))
Declaration(AnnotationProperty(ldp:inbox))
Declaration(AnnotationProperty(:inbox))
Declaration(AnnotationProperty(:oidcIssuer))
Declaration(AnnotationProperty(:read))
Declaration(AnnotationProperty(cc:attributionURL))
Declaration(AnnotationProperty(cc:license))
############################
#   Annotation Properties
############################

# Annotation Property: <http://www.w3.org/ns/solid/terms#inbox> (inbox (deprecated))

AnnotationAssertion(rdfs:comment :inbox "Deprecated pointer to a Linked Data Notifications inbox; please use http://www.w3.org/ns/ldp#inbox instead."@en)
AnnotationAssertion(rdfs:isDefinedBy :inbox <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :inbox "inbox (deprecated)"@en)
AnnotationAssertion(owl:deprecated :inbox "true"^^xsd:boolean)
SubAnnotationPropertyOf(:inbox ldp:inbox)

# Annotation Property: <http://www.w3.org/ns/solid/terms#oidcIssuer> (oidcIssuer)

AnnotationAssertion(rdfs:comment :oidcIssuer "The preferred OpenID Connect issuer URI for a given Web ID."@en)
AnnotationAssertion(rdfs:isDefinedBy :oidcIssuer <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :oidcIssuer "oidcIssuer"@en)
SubAnnotationPropertyOf(:oidcIssuer <http://openid.net/specs/connect/1.0/issuer>)

# Annotation Property: <http://www.w3.org/ns/solid/terms#read> (read)

AnnotationAssertion(rdfs:comment :read "Indicates if a message has been read or not. This property should have a boolean datatype."@en)
AnnotationAssertion(rdfs:isDefinedBy :read <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :read "read"@en)
AnnotationPropertyDomain(:read <http://rdfs.org/sioc/ns#Post>)


############################
#   Object Properties
############################

# Object Property: <http://www.w3.org/ns/solid/terms#deletes> (deletes)

AnnotationAssertion(rdfs:comment :deletes "The triple patterns this patch removes from the document."@en)
AnnotationAssertion(rdfs:isDefinedBy :deletes <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :deletes "deletes"@en)
FunctionalObjectProperty(:deletes)
ObjectPropertyDomain(:deletes :Patch)
ObjectPropertyRange(:deletes log:Formula)

# Object Property: <http://www.w3.org/ns/solid/terms#inserts> (inserts)

AnnotationAssertion(rdfs:comment :inserts "The triple patterns this patch adds to the document."@en)
AnnotationAssertion(rdfs:isDefinedBy :inserts <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :inserts "inserts"@en)
FunctionalObjectProperty(:inserts)
ObjectPropertyDomain(:inserts :Patch)
ObjectPropertyRange(:inserts log:Formula)

# Object Property: <http://www.w3.org/ns/solid/terms#patches> (patches)

AnnotationAssertion(rdfs:comment :patches "The document to which this patch applies."@en)
AnnotationAssertion(rdfs:isDefinedBy :patches <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :patches "patches"@en)
ObjectPropertyDomain(:patches :Patch)
ObjectPropertyRange(:patches rdfs:Resource)

# Object Property: <http://www.w3.org/ns/solid/terms#privateTypeIndex> (private type index)

AnnotationAssertion(rdfs:comment :privateTypeIndex "Points to an unlisted type index resource."@en)
AnnotationAssertion(rdfs:isDefinedBy :privateTypeIndex <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :privateTypeIndex "private type index"@en)
ObjectPropertyRange(:privateTypeIndex :UnlistedDocument)

# Object Property: <http://www.w3.org/ns/solid/terms#publicTypeIndex> (public type index)

AnnotationAssertion(rdfs:comment :publicTypeIndex "Points to a listed type index resource."@en)
AnnotationAssertion(rdfs:isDefinedBy :publicTypeIndex <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :publicTypeIndex "public type index"@en)
SubObjectPropertyOf(:publicTypeIndex :typeIndex)
ObjectPropertyRange(:publicTypeIndex :ListedDocument)

# Object Property: <http://www.w3.org/ns/solid/terms#typeIndex> (type index)

AnnotationAssertion(rdfs:comment :typeIndex "Points to a TypeIndex resource."@en)
AnnotationAssertion(rdfs:isDefinedBy :typeIndex <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :typeIndex "type index"@en)
ObjectPropertyRange(:typeIndex :TypeIndex)

# Object Property: <http://www.w3.org/ns/solid/terms#where> (where)

AnnotationAssertion(rdfs:comment :where "The conditions the document and the inserted and deleted triple patterns need to satisfy in order for the patch to be applied."@en)
AnnotationAssertion(rdfs:isDefinedBy :where <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :where "where"@en)
FunctionalObjectProperty(:where)
ObjectPropertyDomain(:where :Patch)
ObjectPropertyRange(:where log:Formula)


############################
#   Data Properties
############################

# Data Property: <http://www.w3.org/ns/solid/terms#storageQuota> (Non-volatile memory quota)

AnnotationAssertion(rdfs:comment :storageQuota "The quota of non-volatile memory that is available for the account (in bytes)"@en)
AnnotationAssertion(rdfs:isDefinedBy :storageQuota <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :storageQuota "Non-volatile memory quota"@en)
DataPropertyDomain(:storageQuota :Account)

# Data Property: <http://www.w3.org/ns/solid/terms#storageUsage> (Non-volatile memory usage)

AnnotationAssertion(rdfs:comment :storageUsage "The amount of non-volatile memory that the account have used (in bytes)"@en)
AnnotationAssertion(rdfs:isDefinedBy :storageUsage <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :storageUsage "Non-volatile memory usage"@en)
DataPropertyDomain(:storageUsage :Account)



############################
#   Classes
############################

# Class: <http://www.w3.org/ns/solid/terms#Account> (Account)

AnnotationAssertion(rdfs:comment :Account "A Solid account."@en)
AnnotationAssertion(rdfs:isDefinedBy :Account <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :Account "Account"@en)

# Class: <http://www.w3.org/ns/solid/terms#Inbox> (Inbox)

AnnotationAssertion(rdfs:comment :Inbox "A resource containing notifications."@en)
AnnotationAssertion(rdfs:isDefinedBy :Inbox <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :Inbox "Inbox"@en)

# Class: <http://www.w3.org/ns/solid/terms#ListedDocument> (Listed Type Index)

AnnotationAssertion(rdfs:comment :ListedDocument "Listed Type Index is a registry of resources that are publicly discoverable by outside users and applications."@en)
AnnotationAssertion(rdfs:isDefinedBy :ListedDocument <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :ListedDocument "Listed Type Index"@en)

# Class: <http://www.w3.org/ns/solid/terms#Notification> (Notification)

AnnotationAssertion(rdfs:comment :Notification "A notification resource."@en)
AnnotationAssertion(rdfs:isDefinedBy :Notification <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :Notification "Notification"@en)

# Class: <http://www.w3.org/ns/solid/terms#Patch> (Patch)

AnnotationAssertion(rdfs:comment :Patch "A patch expresses conditional modifications to a resource that has an RDF-based representation."@en)
AnnotationAssertion(rdfs:isDefinedBy :Patch <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :Patch "Patch"@en)

# Class: <http://www.w3.org/ns/solid/terms#Timeline> (Timeline)

AnnotationAssertion(rdfs:comment :Timeline "A resource containing time ordered items and sub-containers.  Sub-containers may be desirable in file based systems to split the timeline into logical components e.g. /yyyy-mm-dd/ as used in ISO 8061."@en)
AnnotationAssertion(rdfs:isDefinedBy :Timeline <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :Timeline "Timeline"@en)

# Class: <http://www.w3.org/ns/solid/terms#TypeIndex> (Type index)

AnnotationAssertion(rdfs:comment :TypeIndex "A index of type registries for resources. Applications can register the RDF type they use and list them in the index resource."@en)
AnnotationAssertion(rdfs:isDefinedBy :TypeIndex <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :TypeIndex "Type index"@en)

# Class: <http://www.w3.org/ns/solid/terms#TypeRegistration> (Type Registration)

AnnotationAssertion(rdfs:comment :TypeRegistration "The registered types that map a RDF classes/types to their locations using either `instance` or `instanceContainer` property."@en)
AnnotationAssertion(rdfs:isDefinedBy :TypeRegistration <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :TypeRegistration "Type Registration"@en)

# Class: <http://www.w3.org/ns/solid/terms#UnlistedDocument> (Unlisted Type Index)

AnnotationAssertion(rdfs:comment :UnlistedDocument "Unlisted Type Index is a registry of resources that are private to the user and their apps, for types that are not publicly discoverable."@en)
AnnotationAssertion(rdfs:isDefinedBy :UnlistedDocument <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :UnlistedDocument "Unlisted Type Index"@en)


AnnotationAssertion(rdfs:comment :account "A solid account belonging to an Agent."@en)
AnnotationAssertion(rdfs:isDefinedBy :account <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :account "account"@en)
AnnotationAssertion(rdfs:comment :forClass "A class that is used to map an listed or unlisted type index."@en)
AnnotationAssertion(rdfs:isDefinedBy :forClass <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :forClass "registry class"@en)
AnnotationAssertion(rdfs:comment :instance "Maps a type to an individual resource, typically an index or a directory listing resource."@en)
AnnotationAssertion(rdfs:isDefinedBy :instance <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :instance "instance"@en)
AnnotationAssertion(rdfs:comment :instanceContainer "Maps a type to a container which the client would have to list to get the instances of that type."@en)
AnnotationAssertion(rdfs:isDefinedBy :instanceContainer <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :instanceContainer "instance container"@en)
AnnotationAssertion(rdfs:comment :loginEndpoint "The login URI of a given server."@en)
AnnotationAssertion(rdfs:isDefinedBy :loginEndpoint <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :loginEndpoint "loginEndpoint"@en)
AnnotationAssertion(rdfs:comment :logoutEndpoint "The logout URI of a given server."@en)
AnnotationAssertion(rdfs:isDefinedBy :logoutEndpoint <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :logoutEndpoint "logoutEndpoint"@en)
AnnotationAssertion(rdfs:comment :notification "Notification resource for an inbox."@en)
AnnotationAssertion(rdfs:isDefinedBy :notification <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :notification "notification"@en)
AnnotationAssertion(rdfs:comment :timeline "Timeline for a given resource."@en)
AnnotationAssertion(rdfs:isDefinedBy :timeline <http://www.w3.org/ns/solid/terms>)
AnnotationAssertion(rdfs:label :timeline "timeline"@en)
)
